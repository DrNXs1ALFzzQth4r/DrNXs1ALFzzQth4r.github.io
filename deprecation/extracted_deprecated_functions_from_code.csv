Package Source,Line,Function,UFI
authy/0.9.3/src/api/user.rs,86,"pub fn new(client: &Client, email: &str, country_code: u16, phone: &str, send_instructions: bool) -> Result<(Status, UserNew), AuthyError> {",
authy/0.9.5/src/api/user.rs,86,"pub fn new(client: &Client, email: &str, country_code: u16, phone: &str, send_instructions: bool) -> Result<(Status, UserNew), AuthyError> {",
bindgen/0.29.1/src/lib.rs,1157,"pub fn generate(mut options: BindgenOptions,",
bindgen/0.30.0/src/lib.rs,1335,pub fn generate(,
chashmap/2.2.0/src/lib.rs,638,"pub fn filter<F>(&self, predicate: F)",
cpal/0.4.2/src/lib.rs,362,pub fn get_channels(&self) -> ChannelsCount {,
cpal/0.4.2/src/lib.rs,372,pub fn get_samples_rate(&self) -> SamplesRate {,
cpal/0.4.2/src/lib.rs,382,pub fn get_samples_format(&self) -> SampleFormat {,
cpal/0.4.3/src/lib.rs,362,pub fn get_channels(&self) -> ChannelsCount {,
cpal/0.4.3/src/lib.rs,372,pub fn get_samples_rate(&self) -> SamplesRate {,
cpal/0.4.3/src/lib.rs,382,pub fn get_samples_format(&self) -> SampleFormat {,
cpal/0.4.4/src/lib.rs,362,pub fn get_channels(&self) -> ChannelsCount {,
cpal/0.4.4/src/lib.rs,372,pub fn get_samples_rate(&self) -> SamplesRate {,
cpal/0.4.4/src/lib.rs,382,pub fn get_samples_format(&self) -> SampleFormat {,
cpal/0.4.5/src/lib.rs,362,pub fn get_channels(&self) -> ChannelsCount {,
cpal/0.4.5/src/lib.rs,372,pub fn get_samples_rate(&self) -> SamplesRate {,
cpal/0.4.5/src/lib.rs,382,pub fn get_samples_format(&self) -> SampleFormat {,
cpal/0.4.6/src/samples_formats.rs,28,pub fn get_sample_size(&self) -> usize {,
cpal/0.4.6/src/lib.rs,131,pub fn get_endpoints_list() -> EndpointsIterator {,
cpal/0.4.6/src/lib.rs,144,pub fn get_default_endpoint() -> Option<Endpoint> {,
cpal/0.4.6/src/lib.rs,162,pub fn get_supported_formats_list(,
cpal/0.4.6/src/lib.rs,177,pub fn get_name(&self) -> String {,
cpal/0.4.6/src/lib.rs,392,pub fn get_channels(&self) -> ChannelsCount {,
cpal/0.4.6/src/lib.rs,402,pub fn get_samples_rate(&self) -> SamplesRate {,
cpal/0.4.6/src/lib.rs,412,pub fn get_samples_format(&self) -> SampleFormat {,
cpal/0.5.0/src/lib.rs,99,pub fn get_endpoints_list() -> EndpointsIterator {,
cpal/0.5.0/src/lib.rs,112,pub fn get_default_endpoint() -> Option<Endpoint> {,
cpal/0.5.0/src/lib.rs,130,pub fn get_supported_formats_list(,
cpal/0.5.0/src/lib.rs,145,pub fn get_name(&self) -> String {,
cpal/0.5.0/src/samples_formats.rs,28,pub fn get_sample_size(&self) -> usize {,
cpal/0.5.1/src/samples_formats.rs,28,pub fn get_sample_size(&self) -> usize {,
cpal/0.5.1/src/lib.rs,99,pub fn get_endpoints_list() -> EndpointsIterator {,
cpal/0.5.1/src/lib.rs,112,pub fn get_default_endpoint() -> Option<Endpoint> {,
cpal/0.5.1/src/lib.rs,130,pub fn get_supported_formats_list(,
cpal/0.5.1/src/lib.rs,145,pub fn get_name(&self) -> String {,
cpal/0.6.0/src/samples_formats.rs,28,pub fn get_sample_size(&self) -> usize {,
cpal/0.6.0/src/lib.rs,182,pub fn get_endpoints_list() -> EndpointsIterator {,
cpal/0.6.0/src/lib.rs,195,pub fn get_default_endpoint() -> Option<Endpoint> {,
cpal/0.6.0/src/lib.rs,219,pub fn get_supported_formats_list(,
cpal/0.6.0/src/lib.rs,235,pub fn get_name(&self) -> String {,
cpal/0.7.0/src/samples_formats.rs,28,pub fn get_sample_size(&self) -> usize {,
cpal/0.7.0/src/lib.rs,182,pub fn get_endpoints_list() -> EndpointsIterator {,
cpal/0.7.0/src/lib.rs,195,pub fn get_default_endpoint() -> Option<Endpoint> {,
cpal/0.7.0/src/lib.rs,219,pub fn get_supported_formats_list(,
cpal/0.7.0/src/lib.rs,235,pub fn get_name(&self) -> String {,
cpal/0.8.0/src/samples_formats.rs,28,pub fn get_sample_size(&self) -> usize {,
csrf/0.2.7/src/core.rs,130,pub fn token(&self) -> &[u8] {,
csrf/0.2.8/src/core.rs,130,pub fn token(&self) -> &[u8] {,
csrf/0.3.0/src/core.rs,130,pub fn token(&self) -> &[u8] {,
eudex/0.1.0/src/lib.rs,386,"pub fn similar(a: &str, b: &str) -> bool {",
eudex/0.1.1/src/lib.rs,168,"pub fn similar(a: &str, b: &str) -> bool {",
flexi_logger/0.6.0/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.10/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.12/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.2/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.2/src/logger.rs,137,pub fn timestamp(mut self) -> Logger {,
flexi_logger/0.6.11/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.13/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.5/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.1/src/logger.rs,137,pub fn timestamp(mut self) -> Logger {,
flexi_logger/0.6.1/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.9/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.8/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
flexi_logger/0.6.6/src/deprecated/mod.rs,10,"pub fn init(config: LogConfig, loglevelspec: Option<String>) -> Result<(), FlexiLoggerError> {",
gcc/0.3.52/src/lib.rs,237,"pub fn compile_library(output: &str, files: &[&str]) {",
gcc/0.3.53/src/lib.rs,237,"pub fn compile_library(output: &str, files: &[&str]) {",
gcc/0.3.54/src/lib.rs,237,"pub fn compile_library(output: &str, files: &[&str]) {",
glib/0.4.1/src/auto/source.rs,69,"//pub fn get_current_time(&self, timeval: /*Ignored*/&mut TimeVal) {",
glib/0.4.1/src/auto/functions.rs,60,//pub fn atexit(func: /*Unknown conversion*//*Unimplemented*/VoidFunc) {,
glib/0.4.1/src/auto/functions.rs,96,pub fn basename<P: AsRef<std::path::Path>>(file_name: P) -> Option<std::path::PathBuf> {,
glib/0.4.1/src/auto/functions.rs,439,pub fn format_size_for_display(size: i64) -> Option<String> {,
gssapi-sys/0.1.0/src/lib.rs,363,"pub fn gss_sign(minor_status: *mut OM_uint32,",
gssapi-sys/0.1.0/src/lib.rs,369,"pub fn gss_verify(minor_status: *mut OM_uint32,",
gssapi-sys/0.1.0/src/lib.rs,375,"pub fn gss_seal(minor_status: *mut OM_uint32,",
gssapi-sys/0.1.0/src/lib.rs,383,"pub fn gss_unseal(minor_status: *mut OM_uint32,",
gurobi/0.3.0/src/model/mod.rs,637,pub fn tune(&self) -> Result<()> { self.check_apicall(unsafe { ffi::GRBtunemodel(self.model) }) },
gurobi/0.3.0/src/model/mod.rs,643,"pub fn get_tune_result(&self, n: i32) -> Result<()> {",
gurobi/0.3.0/src/model/mod.rs,659,"pub fn get_concurrent_env(&self, num: i32) -> Result<Env> {",
gurobi/0.3.1/src/model/mod.rs,692,"pub fn get_concurrent_env(&self, num: i32) -> Result<Env> {",
gurobi/0.3.1/src/model/mod.rs,702,pub fn discard_concurrent_envs(&self) { unsafe { ffi::GRBdiscardconcurrentenvs(self.model) } },
gurobi/0.3.2/src/env.rs,64,"pub fn new_model(&self, modelname: &str) -> Result<Model> { Model::new(modelname, self) }",
gurobi/0.3.2/src/env.rs,68,"pub fn read_model(&self, filename: &str) -> Result<Model> { Model::read_from(filename, self) }",
gurobi/0.3.2/src/model/mod.rs,557,"pub fn get_concurrent_env(&self, num: i32) -> Result<Env> {",
gurobi/0.3.2/src/model/mod.rs,569,pub fn discard_concurrent_envs(&self) { unsafe { ffi::GRBdiscardconcurrentenvs(self.model) } },
handlebars-iron/0.10.0/src/middleware.rs,61,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.10.0/src/middleware.rs,73,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
handlebars-iron/0.10.1/src/middleware.rs,61,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.10.1/src/middleware.rs,73,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
handlebars-iron/0.10.2/src/middleware.rs,61,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.10.2/src/middleware.rs,73,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
handlebars-iron/0.11.0/src/middleware.rs,77,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.11.0/src/middleware.rs,89,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
handlebars-iron/0.11.1/src/middleware.rs,77,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.11.1/src/middleware.rs,89,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
handlebars-iron/0.12.0/src/middleware.rs,77,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.12.0/src/middleware.rs,89,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
handlebars-iron/0.13.0/src/middleware.rs,100,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.13.0/src/middleware.rs,112,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
handlebars-iron/0.13.1/src/middleware.rs,100,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.13.1/src/middleware.rs,112,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
handlebars-iron/0.13.2/src/middleware.rs,100,"pub fn new(prefix: &str, suffix: &str) -> HandlebarsEngine {",
handlebars-iron/0.13.2/src/middleware.rs,112,"pub fn from(prefix: &str, suffix: &str, custom: Handlebars) -> HandlebarsEngine {",
histogram/0.4.0/src/lib.rs,412,"pub fn record(&mut self, value: u64, count: u64) -> Result<(), &'static str> {",
histogram/0.5.0/src/lib.rs,429,"pub fn record(&mut self, value: u64, count: u64) -> Result<(), &'static str> {",
histogram/0.5.1/src/lib.rs,429,"pub fn record(&mut self, value: u64, count: u64) -> Result<(), &'static str> {",
hsa/0.1.0/src/system.rs,65,pub fn extension_supported(,
hsa/0.1.0/src/isa.rs,27,"pub fn call_convention_count(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/isa.rs,32,"pub fn call_convention_info_wavefront_size(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/isa.rs,39,"pub fn call_convention_info_wavefronts_per_compute_unit(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/ext_finalize.rs,47,pub fn finalize<T: Into<Vec<u8>>>(,
hsa/0.1.0/src/executable.rs,30,pub fn load_code_object<T: Into<Vec<u8>>>(,
hsa/0.1.0/src/executable.rs,58,pub fn get_symbol<T: Into<Vec<u8>>>(,
hsa/0.1.0/src/executable.rs,102,"pub fn symbols(&self) -> Result<Vec<ExecutableSymbol>, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,164,"pub fn name(&self) -> Result<String, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,181,"pub fn module_name(&self) -> Result<String, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,230,"pub fn variable_allocation(&self) -> Result<VariableAllocation, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,237,"pub fn variable_segment(&self) -> Result<VariableSegment, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,242,"pub fn variable_alignment(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,249,"pub fn variable_size(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,254,"pub fn variable_is_const(&self) -> Result<bool, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,293,"pub fn kernel_call_convention(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/executable.rs,314,"pub fn indirect_function_call_convention(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,36,"pub fn machine_model(&self) -> Result<MachineModel, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,41,"pub fn profile(&self) -> Result<Profile, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,46,"pub fn default_float_rounding_mode(&self) -> Result<DefaultFloatRoundingMode, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,51,pub fn base_profile_default_float_rounding_mode(,
hsa/0.1.0/src/agent.rs,60,"pub fn fast_f16_operation(&self) -> Result<bool, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,65,"pub fn wavefront_size(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,70,"pub fn workgroup_max_dim(&self) -> Result<[u16; 3], ErrorStatus> {",
hsa/0.1.0/src/agent.rs,75,"pub fn workgroup_max_size(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,80,"pub fn grid_max_dim(&self) -> Result<Dim3, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,85,"pub fn grid_max_size(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,90,"pub fn fbarrier_max_size(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,95,"pub fn queues_max(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,112,"pub fn node(&self) -> Result<u32, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,121,"pub fn cache_size(&self) -> Result<[u32; 4], ErrorStatus> {",
hsa/0.1.0/src/agent.rs,126,"pub fn isa(&self) -> Result<ISA, ErrorStatus> {",
hsa/0.1.0/src/agent.rs,176,pub fn extension_supported(,
hsa/0.1.0/src/signal.rs,27,fn load_acquire(&self) -> SignalValue {,
hsa/0.1.0/src/signal.rs,40,"fn store_release(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,69,"fn exchange_acq_rel(&self, value: SignalValue) -> SignalValue {",
hsa/0.1.0/src/signal.rs,74,"fn exchange_acquire(&self, value: SignalValue) -> SignalValue {",
hsa/0.1.0/src/signal.rs,79,"fn exchange_release(&self, value: SignalValue) -> SignalValue {",
hsa/0.1.0/src/signal.rs,100,"fn cas_acq_rel(&self, expected: SignalValue, value: SignalValue) -> SignalValue {",
hsa/0.1.0/src/signal.rs,105,"fn cas_acquire(&self, expected: SignalValue, value: SignalValue) -> SignalValue {",
hsa/0.1.0/src/signal.rs,110,"fn cas_release(&self, expected: SignalValue, value: SignalValue) -> SignalValue {",
hsa/0.1.0/src/signal.rs,131,"fn add_acq_rel(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,136,"fn add_acquire(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,141,"fn add_release(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,162,"fn subtract_acq_rel(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,167,"fn subtract_acquire(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,172,"fn subtract_release(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,193,"fn and_acq_rel(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,198,"fn and_acquire(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,203,"fn and_release(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,224,"fn or_acq_rel(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,229,"fn or_acquire(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,234,"fn or_release(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,255,"fn xor_acq_rel(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,260,"fn xor_acquire(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,265,"fn xor_release(&self, value: SignalValue) {",
hsa/0.1.0/src/signal.rs,306,fn wait_acquire(,
hsa/0.1.0/src/queue.rs,69,pub fn load_read_index_acquire(&self) -> u64 {,
hsa/0.1.0/src/queue.rs,79,pub fn load_write_index_acquire(&self) -> u64 {,
hsa/0.1.0/src/queue.rs,89,"pub fn store_write_index_release(&self, value: u64) {",
hsa/0.1.0/src/queue.rs,106,"pub fn cas_write_index_acq_rel(&self, expected: u64, value: u64) -> u64 {",
hsa/0.1.0/src/queue.rs,110,"pub fn cas_write_index_acquire(&self, expected: u64, value: u64) -> u64 {",
hsa/0.1.0/src/queue.rs,114,"pub fn cas_write_index_release(&self, expected: u64, value: u64) -> u64 {",
hsa/0.1.0/src/queue.rs,131,"pub fn add_write_index_acq_rel(&self, value: u64) -> u64 {",
hsa/0.1.0/src/queue.rs,135,"pub fn add_write_index_acquire(&self, value: u64) -> u64 {",
hsa/0.1.0/src/queue.rs,139,"pub fn add_write_index_release(&self, value: u64) -> u64 {",
hsa/0.1.0/src/queue.rs,150,"pub fn store_read_index_release(&self, value: u64) {",
hsa/0.1.0/src/native.rs,47,pub fn hsa_agent_extension_supported(,
hsa/0.1.0/src/native.rs,70,pub fn hsa_signal_load_scacquire(signal: SignalHandle) -> SignalValue;,
hsa/0.1.0/src/native.rs,71,pub fn hsa_signal_load_relaxed(signal: SignalHandle) -> SignalValue;,
hsa/0.1.0/src/native.rs,73,pub fn hsa_signal_load_acquire(signal: SignalHandle) -> SignalValue;,
hsa/0.1.0/src/native.rs,74,"pub fn hsa_signal_store_relaxed(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,75,"pub fn hsa_signal_store_screlease(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,77,"pub fn hsa_signal_store_release(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,78,"pub fn hsa_signal_silent_store_relaxed(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,83,"pub fn hsa_signal_exchange_relaxed(signal: SignalHandle, value: SignalValue) -> SignalValue;",
hsa/0.1.0/src/native.rs,84,"pub fn hsa_signal_exchange_screlease(signal: SignalHandle, value: SignalValue) -> SignalValue;",
hsa/0.1.0/src/native.rs,86,"pub fn hsa_signal_exchange_acq_rel(signal: SignalHandle, value: SignalValue) -> SignalValue;",
hsa/0.1.0/src/native.rs,88,"pub fn hsa_signal_exchange_acquire(signal: SignalHandle, value: SignalValue) -> SignalValue;",
hsa/0.1.0/src/native.rs,90,"pub fn hsa_signal_exchange_release(signal: SignalHandle, value: SignalValue) -> SignalValue;",
hsa/0.1.0/src/native.rs,91,pub fn hsa_signal_cas_scacq_screl(,
hsa/0.1.0/src/native.rs,112,pub fn hsa_signal_cas_acq_rel(,
hsa/0.1.0/src/native.rs,118,pub fn hsa_signal_cas_acquire(,
hsa/0.1.0/src/native.rs,124,pub fn hsa_signal_cas_release(,
hsa/0.1.0/src/native.rs,131,"pub fn hsa_signal_add_relaxed(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,132,"pub fn hsa_signal_add_screlease(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,134,"pub fn hsa_signal_add_acq_rel(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,136,"pub fn hsa_signal_add_acquire(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,138,"pub fn hsa_signal_add_release(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,139,"pub fn hsa_signal_subtract_scacq_screl(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,141,"pub fn hsa_signal_subtract_relaxed(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,142,"pub fn hsa_signal_subtract_screlease(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,144,"pub fn hsa_signal_subtract_acq_rel(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,146,"pub fn hsa_signal_subtract_acquire(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,148,"pub fn hsa_signal_subtract_release(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,149,"pub fn hsa_signal_and_scacq_screl(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,151,"pub fn hsa_signal_and_relaxed(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,152,"pub fn hsa_signal_and_screlease(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,154,"pub fn hsa_signal_and_acq_rel(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,156,"pub fn hsa_signal_and_acquire(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,158,"pub fn hsa_signal_and_release(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,159,"pub fn hsa_signal_or_scacq_screl(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,161,"pub fn hsa_signal_or_relaxed(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,162,"pub fn hsa_signal_or_screlease(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,164,"pub fn hsa_signal_or_acq_rel(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,166,"pub fn hsa_signal_or_acquire(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,168,"pub fn hsa_signal_or_release(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,169,"pub fn hsa_signal_xor_scacq_screl(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,171,"pub fn hsa_signal_xor_relaxed(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,172,"pub fn hsa_signal_xor_screlease(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,174,"pub fn hsa_signal_xor_acq_rel(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,176,"pub fn hsa_signal_xor_acquire(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,178,"pub fn hsa_signal_xor_release(signal: SignalHandle, value: SignalValue);",
hsa/0.1.0/src/native.rs,179,pub fn hsa_signal_wait_scacquire(,
hsa/0.1.0/src/native.rs,194,pub fn hsa_signal_wait_acquire(,
hsa/0.1.0/src/native.rs,247,pub fn hsa_queue_load_read_index_scacquire(queue: *const QueueHandle) -> u64;,
hsa/0.1.0/src/native.rs,248,pub fn hsa_queue_load_read_index_relaxed(queue: *const QueueHandle) -> u64;,
hsa/0.1.0/src/native.rs,250,pub fn hsa_queue_load_read_index_acquire(queue: *const QueueHandle) -> u64;,
hsa/0.1.0/src/native.rs,251,pub fn hsa_queue_load_write_index_scacquire(queue: *const QueueHandle) -> u64;,
hsa/0.1.0/src/native.rs,252,pub fn hsa_queue_load_write_index_relaxed(queue: *const QueueHandle) -> u64;,
hsa/0.1.0/src/native.rs,254,pub fn hsa_queue_load_write_index_acquire(queue: *const QueueHandle) -> u64;,
hsa/0.1.0/src/native.rs,255,"pub fn hsa_queue_store_write_index_relaxed(queue: *const QueueHandle, value: u64);",
hsa/0.1.0/src/native.rs,256,"pub fn hsa_queue_store_write_index_screlease(queue: *const QueueHandle, value: u64);",
hsa/0.1.0/src/native.rs,258,"pub fn hsa_queue_store_write_index_release(queue: *const QueueHandle, value: u64);",
hsa/0.1.0/src/native.rs,259,pub fn hsa_queue_cas_write_index_scacq_screl(,
hsa/0.1.0/src/native.rs,280,pub fn hsa_queue_cas_write_index_acq_rel(,
hsa/0.1.0/src/native.rs,286,pub fn hsa_queue_cas_write_index_acquire(,
hsa/0.1.0/src/native.rs,292,pub fn hsa_queue_cas_write_index_release(,
hsa/0.1.0/src/native.rs,299,"pub fn hsa_queue_add_write_index_relaxed(queue: *const QueueHandle, value: u64) -> u64;",
hsa/0.1.0/src/native.rs,300,"pub fn hsa_queue_add_write_index_screlease(queue: *const QueueHandle, value: u64) -> u64;",
hsa/0.1.0/src/native.rs,302,"pub fn hsa_queue_add_write_index_acq_rel(queue: *const QueueHandle, value: u64) -> u64;",
hsa/0.1.0/src/native.rs,304,"pub fn hsa_queue_add_write_index_acquire(queue: *const QueueHandle, value: u64) -> u64;",
hsa/0.1.0/src/native.rs,306,"pub fn hsa_queue_add_write_index_release(queue: *const QueueHandle, value: u64) -> u64;",
hsa/0.1.0/src/native.rs,307,"pub fn hsa_queue_store_read_index_relaxed(queue: *const QueueHandle, value: u64);",
hsa/0.1.0/src/native.rs,308,"pub fn hsa_queue_store_read_index_screlease(queue: *const QueueHandle, value: u64);",
hsa/0.1.0/src/native.rs,310,"pub fn hsa_queue_store_read_index_release(queue: *const QueueHandle, value: u64);",
hsa/0.1.0/src/native.rs,342,pub fn hsa_isa_get_info(,
hsa/0.1.0/src/native.rs,367,"pub fn hsa_isa_compatible(code_object_isa: ISA, agent_isa: ISA, result: &bool) -> HSAStatus;*/",
hsa/0.1.0/src/native.rs,368,/*pub fn hsa_code_object_reader_create_from_file(,
hsa/0.1.0/src/native.rs,377,pub fn hsa_code_object_reader_destroy(code_object_reader: CodeObjectReader) -> HSAStatus;,
hsa/0.1.0/src/native.rs,379,pub fn hsa_executable_create(,
hsa/0.1.0/src/native.rs,435,pub fn hsa_executable_get_symbol(,
hsa/0.1.0/src/native.rs,444,pub fn hsa_executable_get_symbol_by_name(,
hsa/0.1.0/src/native.rs,473,pub fn hsa_executable_iterate_symbols(,
hsa/0.1.0/src/native.rs,479,pub fn hsa_code_object_serialize(,
hsa/0.1.0/src/native.rs,489,pub fn hsa_code_object_deserialize(,
hsa/0.1.0/src/native.rs,496,pub fn hsa_code_object_destroy(code_object: CodeObject) -> HSAStatus;,
hsa/0.1.0/src/native.rs,498,pub fn hsa_code_object_get_info(,
hsa/0.1.0/src/native.rs,504,pub fn hsa_executable_load_code_object(,
hsa/0.1.0/src/native.rs,511,/*pub fn hsa_code_object_get_symbol(,
hsa/0.1.0/src/native.rs,517,pub fn hsa_code_object_get_symbol_from_name(,
hsa/0.1.0/src/native.rs,524,pub fn hsa_code_symbol_get_info(,
hsa/0.1.0/src/native.rs,530,pub fn hsa_code_object_iterate_symbols(,
hsa/0.1.0/src/native.rs,541,"pub fn hsa_ext_isa_from_name(name: *const c_char, isa: &mut ISA) -> HSAStatus;",
hsa/0.1.0/src/native.rs,543,pub fn hsa_ext_isa_get_info(,
hsa/0.1.0/src/native.rs,592,pub fn hsa_ext_program_finalize(,
hyper/0.11.16/src/client/mod.rs,83,pub fn handle(&self) -> &Handle {,
hyper/0.11.15/src/client/mod.rs,83,pub fn handle(&self) -> &Handle {,
hyper/0.11.17/src/client/mod.rs,86,pub fn handle(&self) -> &Handle {,
hyper/0.11.18/src/client/mod.rs,87,pub fn handle(&self) -> &Handle {,
i3ipc/0.8.0/src/lib.rs,313,"pub fn command(&mut self, string: &str) -> Result<reply::Command, MessageError> {",
i3ipc/0.8.1/src/lib.rs,313,"pub fn command(&mut self, string: &str) -> Result<reply::Command, MessageError> {",
i3ipc/0.8.2/src/lib.rs,316,"pub fn command(&mut self, string: &str) -> Result<reply::Command, MessageError> {",
krb5-sys/0.1.0/src/lib.rs,439,"pub fn krb5_c_random_seed(context: krb5_context,",
krb5-sys/0.1.1/src/lib.rs,439,"pub fn krb5_c_random_seed(context: krb5_context,",
krb5-sys/0.1.1/src/lib.rs,2256,"pub fn krb5_auth_con_getlocalsubkey(context: krb5_context,",
krb5-sys/0.1.1/src/lib.rs,2262,"pub fn krb5_auth_con_getremotesubkey(context: krb5_context,",
krb5-sys/0.1.1/src/lib.rs,2276,"pub fn krb5_auth_con_initivector(context: krb5_context,",
krb5-sys/0.1.2/src/lib.rs,438,"pub fn krb5_c_random_seed(context: krb5_context,",
krb5-sys/0.1.2/src/lib.rs,2255,"pub fn krb5_auth_con_getlocalsubkey(context: krb5_context,",
krb5-sys/0.1.2/src/lib.rs,2261,"pub fn krb5_auth_con_getremotesubkey(context: krb5_context,",
krb5-sys/0.1.2/src/lib.rs,2275,"pub fn krb5_auth_con_initivector(context: krb5_context,",
krb5-sys/0.1.3/src/lib.rs,440,"pub fn krb5_c_random_seed(context: krb5_context,",
krb5-sys/0.1.3/src/lib.rs,2267,"pub fn krb5_auth_con_getlocalsubkey(context: krb5_context,",
krb5-sys/0.1.3/src/lib.rs,2273,"pub fn krb5_auth_con_getremotesubkey(context: krb5_context,",
krb5-sys/0.1.3/src/lib.rs,2287,"pub fn krb5_auth_con_initivector(context: krb5_context,",
krb5-sys/0.1.4/src/lib.rs,442,"pub fn krb5_c_random_seed(context: krb5_context,",
krb5-sys/0.1.4/src/lib.rs,2269,"pub fn krb5_auth_con_getlocalsubkey(context: krb5_context,",
krb5-sys/0.1.4/src/lib.rs,2275,"pub fn krb5_auth_con_getremotesubkey(context: krb5_context,",
krb5-sys/0.1.4/src/lib.rs,2289,"pub fn krb5_auth_con_initivector(context: krb5_context,",
libpulse-sys/1.0.0/src/context/introspect.rs,346,"pub type pa_autoload_info_cb_t = Option<extern ""C"" fn(c: *mut pa_context, i: *const pa_autoload_info, eol: i32, userdata: *mut c_void)>;",
libpulse-sys/1.0.0/src/context/introspect.rs,412,"pub fn pa_context_get_sample_info_list(c: *mut pa_context, cb: pa_sample_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.0/src/context/introspect.rs,416,"pub fn pa_context_get_autoload_info_by_name(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.0/src/context/introspect.rs,419,"pub fn pa_context_get_autoload_info_by_index(c: *mut pa_context, idx: u32, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.0/src/context/introspect.rs,422,"pub fn pa_context_get_autoload_info_list(c: *mut pa_context, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.0/src/context/introspect.rs,425,"pub fn pa_context_add_autoload(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, module: *const c_char, argument: *const c_char, cb: pa_context_index_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.0/src/context/introspect.rs,428,"pub fn pa_context_remove_autoload_by_name(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, cb: pa_context_success_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.0/src/context/introspect.rs,431,"pub fn pa_context_remove_autoload_by_index(c: *mut pa_context, idx: u32, cb: pa_context_success_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.2/src/context/introspect.rs,346,"pub type pa_autoload_info_cb_t = Option<extern ""C"" fn(c: *mut pa_context, i: *const pa_autoload_info, eol: i32, userdata: *mut c_void)>;",
libpulse-sys/1.0.2/src/context/introspect.rs,412,"pub fn pa_context_get_sample_info_list(c: *mut pa_context, cb: pa_sample_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.2/src/context/introspect.rs,416,"pub fn pa_context_get_autoload_info_by_name(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.2/src/context/introspect.rs,419,"pub fn pa_context_get_autoload_info_by_index(c: *mut pa_context, idx: u32, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.2/src/context/introspect.rs,422,"pub fn pa_context_get_autoload_info_list(c: *mut pa_context, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.2/src/context/introspect.rs,425,"pub fn pa_context_add_autoload(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, module: *const c_char, argument: *const c_char, cb: pa_context_index_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.2/src/context/introspect.rs,428,"pub fn pa_context_remove_autoload_by_name(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, cb: pa_context_success_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.2/src/context/introspect.rs,431,"pub fn pa_context_remove_autoload_by_index(c: *mut pa_context, idx: u32, cb: pa_context_success_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.1/src/context/introspect.rs,346,"pub type pa_autoload_info_cb_t = Option<extern ""C"" fn(c: *mut pa_context, i: *const pa_autoload_info, eol: i32, userdata: *mut c_void)>;",
libpulse-sys/1.0.1/src/context/introspect.rs,412,"pub fn pa_context_get_sample_info_list(c: *mut pa_context, cb: pa_sample_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.1/src/context/introspect.rs,416,"pub fn pa_context_get_autoload_info_by_name(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.1/src/context/introspect.rs,419,"pub fn pa_context_get_autoload_info_by_index(c: *mut pa_context, idx: u32, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.1/src/context/introspect.rs,422,"pub fn pa_context_get_autoload_info_list(c: *mut pa_context, cb: pa_autoload_info_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.1/src/context/introspect.rs,425,"pub fn pa_context_add_autoload(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, module: *const c_char, argument: *const c_char, cb: pa_context_index_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.1/src/context/introspect.rs,428,"pub fn pa_context_remove_autoload_by_name(c: *mut pa_context, name: *const c_char, type_: pa_autoload_type_t, cb: pa_context_success_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
libpulse-sys/1.0.1/src/context/introspect.rs,431,"pub fn pa_context_remove_autoload_by_index(c: *mut pa_context, idx: u32, cb: pa_context_success_cb_t, userdata: *mut c_void) -> *mut ::operation::pa_operation;",
linxal/0.4.2/src/generate/matgen.rs,519,"pub fn bands(&mut self, lower: usize, upper: usize) -> &mut Self {",
linxal/0.5.2/src/generate/matgen.rs,519,"pub fn bands(&mut self, lower: usize, upper: usize) -> &mut Self {",
linxal/0.5.1/src/generate/matgen.rs,519,"pub fn bands(&mut self, lower: usize, upper: usize) -> &mut Self {",
linxal/0.6.0/src/generate/matgen.rs,519,"pub fn bands(&mut self, lower: usize, upper: usize) -> &mut Self {",
linxal/0.5.0/src/generate/matgen.rs,519,"pub fn bands(&mut self, lower: usize, upper: usize) -> &mut Self {",
lm4f120/0.2.0/src/uart.rs,149,pub fn read_single(&mut self) -> Option<u8> {,
lm4f120/0.3.0/src/uart.rs,149,pub fn read_single(&mut self) -> Option<u8> {,
lm4f120/0.4.0/src/uart.rs,149,pub fn read_single(&mut self) -> Option<u8> {,
lm4f120/0.5.0/src/uart.rs,149,pub fn read_single(&mut self) -> Option<u8> {,
lm4f120/0.5.1/src/uart.rs,154,pub fn read_single(&mut self) -> Option<u8> {,
lm4f120/0.7.0/src/uart.rs,154,pub fn read_single(&mut self) -> Option<u8> {,
lm4f120/0.8.0/src/uart.rs,154,pub fn read_single(&mut self) -> Option<u8> {,
lodepng/2.0.3/src/lib.rs,854,"pub fn auto_choose_color(mode_out: &mut ColorMode, image: &[u8], w: usize, h: usize, mode_in: &ColorMode) -> Result<(), Error> {",
lodepng/2.0.4/src/lib.rs,854,"pub fn auto_choose_color(mode_out: &mut ColorMode, image: &[u8], w: usize, h: usize, mode_in: &ColorMode) -> Result<(), Error> {",
lodepng/2.0.5/src/lib.rs,854,"pub fn auto_choose_color(mode_out: &mut ColorMode, image: &[u8], w: usize, h: usize, mode_in: &ColorMode) -> Result<(), Error> {",
lodepng/2.0.6/src/lib.rs,854,"pub fn auto_choose_color(mode_out: &mut ColorMode, image: &[u8], w: usize, h: usize, mode_in: &ColorMode) -> Result<(), Error> {",
lodepng/2.0.7/src/lib.rs,853,"pub fn auto_choose_color(mode_out: &mut ColorMode, image: &[u8], w: usize, h: usize, mode_in: &ColorMode) -> Result<(), Error> {",
lodepng/2.1.0/src/lib.rs,857,"pub fn auto_choose_color(mode_out: &mut ColorMode, image: &[u8], w: usize, h: usize, mode_in: &ColorMode) -> Result<(), Error> {",
lodepng/2.1.1/src/lib.rs,857,"pub fn auto_choose_color(mode_out: &mut ColorMode, image: &[u8], w: usize, h: usize, mode_in: &ColorMode) -> Result<(), Error> {",
lodepng/2.1.2/src/lib.rs,857,"pub fn auto_choose_color(mode_out: &mut ColorMode, image: &[u8], w: usize, h: usize, mode_in: &ColorMode) -> Result<(), Error> {",
lua/0.0.10/src/ffi/lauxlib.rs,157,"pub unsafe fn luaL_checkint(L: *mut lua_State, n: c_int) -> c_int {",
lua/0.0.10/src/ffi/lauxlib.rs,163,"pub unsafe fn luaL_optint(L: *mut lua_State, n: c_int, d: c_int) -> c_int {",
lua/0.0.10/src/ffi/lauxlib.rs,169,"pub unsafe fn luaL_checklong(L: *mut lua_State, n: c_int) -> c_long {",
lua/0.0.10/src/ffi/lauxlib.rs,175,"pub unsafe fn luaL_optlong(L: *mut lua_State, n: c_int, d: c_long) -> c_long {",
lua/0.0.9/src/ffi/lauxlib.rs,157,"pub unsafe fn luaL_checkint(L: *mut lua_State, n: c_int) -> c_int {",
lua/0.0.9/src/ffi/lauxlib.rs,163,"pub unsafe fn luaL_optint(L: *mut lua_State, n: c_int, d: c_int) -> c_int {",
lua/0.0.9/src/ffi/lauxlib.rs,169,"pub unsafe fn luaL_checklong(L: *mut lua_State, n: c_int) -> c_long {",
lua/0.0.9/src/ffi/lauxlib.rs,175,"pub unsafe fn luaL_optlong(L: *mut lua_State, n: c_int, d: c_long) -> c_long {",
melo/0.1.0/src/lib.rs,33,"pub fn compile_to_abc(input: &str, filename: Option<&str>) -> Result<String, Error>",
mond/0.1.0/src/ffi/lauxlib.rs,176,"pub unsafe fn luaL_checkint(L: *mut lua_State, n: c_int) -> c_int {",
mond/0.1.0/src/ffi/lauxlib.rs,181,"pub unsafe fn luaL_optint(L: *mut lua_State, n: c_int, d: c_int) -> c_int {",
mond/0.1.0/src/ffi/lauxlib.rs,186,"pub unsafe fn luaL_checklong(L: *mut lua_State, n: c_int) -> c_long {",
mond/0.1.0/src/ffi/lauxlib.rs,191,"pub unsafe fn luaL_optlong(L: *mut lua_State, n: c_int, d: c_long) -> c_long {",
mozjpeg-sys/0.5.8/src/lib.rs,785,pub fn jpeg_finish_output(cinfo: &mut jpeg_decompress_struct) -> boolean;,
mozjpeg-sys/0.5.8/src/lib.rs,786,pub fn jpeg_input_complete(cinfo: &jpeg_decompress_struct) -> boolean;,
mozjpeg-sys/0.5.8/src/lib.rs,788,pub fn jpeg_new_colormap(cinfo: &mut jpeg_decompress_struct);,
mozjpeg-sys/0.5.8/src/lib.rs,789,pub fn jpeg_consume_input(cinfo: &mut jpeg_decompress_struct) -> c_int;,
mozjpeg-sys/0.5.10/src/lib.rs,785,pub fn jpeg_finish_output(cinfo: &mut jpeg_decompress_struct) -> boolean;,
mozjpeg-sys/0.5.10/src/lib.rs,786,pub fn jpeg_input_complete(cinfo: &jpeg_decompress_struct) -> boolean;,
mozjpeg-sys/0.5.10/src/lib.rs,788,pub fn jpeg_new_colormap(cinfo: &mut jpeg_decompress_struct);,
mozjpeg-sys/0.5.10/src/lib.rs,789,pub fn jpeg_consume_input(cinfo: &mut jpeg_decompress_struct) -> c_int;,
mws/0.5.2/src/reports/mod.rs,444,"pub fn GetFlatFileSettlementReport(client: &Client, report_id: String) -> Result<Response<SettlementReport>> {",
mws/0.5.5/src/reports/mod.rs,444,"pub fn GetFlatFileSettlementReport(client: &Client, report_id: String) -> Result<Response<SettlementReport>> {",
mws/0.5.3/src/reports/mod.rs,444,"pub fn GetFlatFileSettlementReport(client: &Client, report_id: String) -> Result<Response<SettlementReport>> {",
pam-auth/0.3.0/src/simple.rs,24,"pub fn login(service: &str, user: &str, password: &str) -> bool {",
pam-auth/0.2.2/src/simple.rs,24,"pub fn login(service: &str, user: &str, password: &str) -> bool {",
pam-auth/0.4.0/src/simple.rs,14,"pub fn login(service: &str, user: &str, password: &str) -> bool {",
pam-auth/0.4.1/src/simple.rs,14,"pub fn login(service: &str, user: &str, password: &str) -> bool {",
pam-auth/0.5.3/src/simple.rs,12,"pub fn login(service: &str, user: &str, password: &str) -> bool {",
pam-auth/0.3.1/src/simple.rs,14,"pub fn login(service: &str, user: &str, password: &str) -> bool {",
protobuf/1.3.0/src/reflect/accessor.rs,719,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,731,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,743,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,755,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,767,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,779,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,791,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,803,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,815,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.3.0/src/reflect/accessor.rs,827,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.3.0/src/reflect/accessor.rs,841,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.3.0/src/reflect/accessor.rs,939,"pub fn make_option_accessor<M, V>(",
protobuf/1.2.1/src/lib/reflect/accessor.rs,719,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,731,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,743,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,755,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,767,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,779,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,791,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,803,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,815,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.2.1/src/lib/reflect/accessor.rs,827,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.2.1/src/lib/reflect/accessor.rs,841,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.2.1/src/lib/reflect/accessor.rs,939,"pub fn make_option_accessor<M, V>(",
protobuf/1.1.0/src/lib/reflect/accessor.rs,719,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,731,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,743,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,755,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,767,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,779,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,791,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,803,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,815,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.1.0/src/lib/reflect/accessor.rs,827,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.1.0/src/lib/reflect/accessor.rs,841,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.1.0/src/lib/reflect/accessor.rs,939,"pub fn make_option_accessor<M, V>(",
protobuf/1.2.0/src/lib/reflect/accessor.rs,719,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,731,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,743,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,755,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,767,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,779,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,791,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,803,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,815,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.2.0/src/lib/reflect/accessor.rs,827,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.2.0/src/lib/reflect/accessor.rs,841,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.2.0/src/lib/reflect/accessor.rs,939,"pub fn make_option_accessor<M, V>(",
protobuf/1.2.2/src/lib/reflect/accessor.rs,719,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,731,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,743,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,755,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,767,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,779,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,791,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,803,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,815,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.2.2/src/lib/reflect/accessor.rs,827,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.2.2/src/lib/reflect/accessor.rs,841,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.2.2/src/lib/reflect/accessor.rs,939,"pub fn make_option_accessor<M, V>(",
protobuf/1.3.1/src/reflect/accessor.rs,719,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,731,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,743,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,755,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,767,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,779,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,791,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,803,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,815,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.3.1/src/reflect/accessor.rs,827,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.3.1/src/reflect/accessor.rs,841,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.3.1/src/reflect/accessor.rs,939,"pub fn make_option_accessor<M, V>(",
protobuf/1.4.0/src/reflect/accessor.rs,737,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,748,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,759,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,770,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,781,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,792,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,803,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,814,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,825,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.4.0/src/reflect/accessor.rs,836,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.4.0/src/reflect/accessor.rs,849,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.4.0/src/reflect/accessor.rs,949,"pub fn make_option_accessor<M, V>(",
protobuf/1.4.1/src/reflect/accessor.rs,737,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,748,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,759,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,770,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,781,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,792,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,803,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,814,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,825,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.4.1/src/reflect/accessor.rs,836,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.4.1/src/reflect/accessor.rs,849,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.4.1/src/reflect/accessor.rs,949,"pub fn make_option_accessor<M, V>(",
protobuf/1.4.2/src/reflect/accessor.rs,737,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,748,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,759,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,770,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,781,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,792,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,803,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,814,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,825,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.4.2/src/reflect/accessor.rs,836,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.4.2/src/reflect/accessor.rs,849,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.4.2/src/reflect/accessor.rs,949,"pub fn make_option_accessor<M, V>(",
protobuf/1.4.3/src/reflect/accessor.rs,737,pub fn make_repeated_u32_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,748,pub fn make_repeated_i32_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,759,pub fn make_repeated_u64_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,770,pub fn make_repeated_i64_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,781,pub fn make_repeated_f32_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,792,pub fn make_repeated_f64_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,803,pub fn make_repeated_bool_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,814,pub fn make_repeated_string_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,825,pub fn make_repeated_bytes_accessor<M : Message + 'static>(,
protobuf/1.4.3/src/reflect/accessor.rs,836,"pub fn make_repeated_enum_accessor<M : Message + 'static, E : ProtobufEnum + 'static>(",
protobuf/1.4.3/src/reflect/accessor.rs,849,"pub fn make_repeated_message_accessor<M : Message + 'static, F : Message + 'static>(",
protobuf/1.4.3/src/reflect/accessor.rs,949,"pub fn make_option_accessor<M, V>(",
px8_plugin_lua/0.0.11/src/ffi/lauxlib.rs,157,"pub unsafe fn luaL_checkint(L: *mut lua_State, n: c_int) -> c_int {",
px8_plugin_lua/0.0.11/src/ffi/lauxlib.rs,163,"pub unsafe fn luaL_optint(L: *mut lua_State, n: c_int, d: c_int) -> c_int {",
px8_plugin_lua/0.0.11/src/ffi/lauxlib.rs,169,"pub unsafe fn luaL_checklong(L: *mut lua_State, n: c_int) -> c_long {",
px8_plugin_lua/0.0.11/src/ffi/lauxlib.rs,175,"pub unsafe fn luaL_optlong(L: *mut lua_State, n: c_int, d: c_long) -> c_long {",
radiant-rs/0.10.0/src/core/font.rs,71,"pub fn with_size(self: &Self, size: f32) -> Font {",
radiant-rs/0.9.0/src/core/color.rs,27,pub fn transparent() -> Color {,
radiant-rs/0.9.0/src/core/color.rs,33,pub fn white() -> Color {,
radiant-rs/0.9.0/src/core/color.rs,39,pub fn black() -> Color {,
radiant-rs/0.9.0/src/core/color.rs,45,pub fn red() -> Color {,
radiant-rs/0.9.0/src/core/color.rs,51,pub fn green() -> Color {,
radiant-rs/0.9.0/src/core/color.rs,57,pub fn blue() -> Color {,
radiant-rs/0.9.0/src/core/color.rs,63,pub fn yellow() -> Color {,
radiant-rs/0.9.0/src/core/color.rs,69,pub fn cyan() -> Color {,
radiant-rs/0.9.0/src/core/color.rs,75,pub fn magenta() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,27,pub fn transparent() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,33,pub fn white() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,39,pub fn black() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,45,pub fn red() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,51,pub fn green() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,57,pub fn blue() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,63,pub fn yellow() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,69,pub fn cyan() -> Color {,
radiant-rs/0.8.1/src/core/color.rs,75,pub fn magenta() -> Color {,
radiant-rs/0.11.2/src/core/font.rs,70,"pub fn with_size(self: &Self, size: f32) -> Font {",
radiant-rs/0.8.2/src/core/color.rs,27,pub fn transparent() -> Color {,
radiant-rs/0.8.2/src/core/color.rs,33,pub fn white() -> Color {,
radiant-rs/0.8.2/src/core/color.rs,39,pub fn black() -> Color {,
radiant-rs/0.8.2/src/core/color.rs,45,pub fn red() -> Color {,
radiant-rs/0.8.2/src/core/color.rs,51,pub fn green() -> Color {,
radiant-rs/0.8.2/src/core/color.rs,57,pub fn blue() -> Color {,
radiant-rs/0.8.2/src/core/color.rs,63,pub fn yellow() -> Color {,
radiant-rs/0.8.2/src/core/color.rs,69,pub fn cyan() -> Color {,
radiant-rs/0.8.2/src/core/color.rs,75,pub fn magenta() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,27,pub fn transparent() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,33,pub fn white() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,39,pub fn black() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,45,pub fn red() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,51,pub fn green() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,57,pub fn blue() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,63,pub fn yellow() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,69,pub fn cyan() -> Color {,
radiant-rs/0.9.1/src/core/color.rs,75,pub fn magenta() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,27,pub fn transparent() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,33,pub fn white() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,39,pub fn black() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,45,pub fn red() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,51,pub fn green() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,57,pub fn blue() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,63,pub fn yellow() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,69,pub fn cyan() -> Color {,
radiant-rs/0.8.0/src/core/color.rs,75,pub fn magenta() -> Color {,
razberry/0.3.0/src/client.rs,316,"pub fn fetch_gateway_state(&self) -> Result<GatewayState, RazberryError> {",
razberry/0.3.0/src/client.rs,347,"pub fn update_gateway_state(&self, gateway_state: &mut GatewayState) ->",
razberry/0.3.0/src/client.rs,401,"pub fn get_data(&self) -> Result<DataResponse, RazberryError> {",
razberry/0.3.0/src/client.rs,412,"pub fn get_data_after(&self, timestamp: i64)",
razberry/0.3.0/src/client.rs,423,"pub fn get_server_timestamp(&self) -> Result<DataResponse, RazberryError> {",
razberry/0.3.0/src/client.rs,430,"pub fn fetch_data(&self, timestamp: Option<i64>)",
reset-router/0.3.0/src/lib.rs,136,pub fn into_inner(self) -> R {,
rulinalg/0.4.2/src/matrix/decomposition/lu.rs,392,"pub fn lup_decomp(self) -> Result<(Matrix<T>, Matrix<T>, Matrix<T>), Error> {",
ruroonga_command/0.2.2/src/select.rs,72,"pub fn sortby(mut self, targets: Vec<String>) -> SelectCommand {",
ruroonga_command/0.2.2/src/selectable/drilldown.rs,32,"pub fn sortby(mut self, targets: Vec<String>) -> Drilldown {",
ruroonga_command/0.2.2/src/selectable/labeled_drilldown.rs,42,"pub fn sortby(mut self, targets: Vec<String>) -> LabeledDrilldown {",
ruroonga_command/0.2.3/src/select.rs,75,"pub fn sortby(mut self, targets: Vec<String>) -> SelectCommand {",
ruroonga_command/0.2.3/src/selectable/drilldown.rs,32,"pub fn sortby(mut self, targets: Vec<String>) -> Drilldown {",
ruroonga_command/0.2.3/src/selectable/labeled_drilldown.rs,42,"pub fn sortby(mut self, targets: Vec<String>) -> LabeledDrilldown {",
ruroonga_command/0.3.0/src/selectable/drilldown.rs,32,"pub fn sortby(mut self, targets: Vec<String>) -> Drilldown {",
ruroonga_command/0.3.0/src/selectable/labeled_drilldown.rs,42,"pub fn sortby(mut self, targets: Vec<String>) -> LabeledDrilldown {",
ruroonga_command/0.3.0/src/select.rs,76,"pub fn sortby(mut self, targets: Vec<String>) -> SelectCommand {",
ruroonga_command/0.3.0/src/logical_select.rs,106,"pub fn sortby(mut self, targets: Vec<String>) -> LogicalSelectCommand {",
ruroonga_command/0.3.4/src/selectable/drilldown.rs,32,"pub fn sortby(mut self, targets: Vec<String>) -> Drilldown {",
ruroonga_command/0.3.4/src/logical_select.rs,105,"pub fn sortby(mut self, targets: Vec<String>) -> LogicalSelectCommand {",
ruroonga_command/0.3.4/src/select.rs,71,"pub fn sortby(mut self, targets: Vec<String>) -> SelectCommand {",
ruroonga_command/0.3.4/src/selectable/labeled_drilldown.rs,42,"pub fn sortby(mut self, targets: Vec<String>) -> LabeledDrilldown {",
ruroonga_command/0.3.2/src/selectable/drilldown.rs,32,"pub fn sortby(mut self, targets: Vec<String>) -> Drilldown {",
ruroonga_command/0.3.2/src/select.rs,71,"pub fn sortby(mut self, targets: Vec<String>) -> SelectCommand {",
ruroonga_command/0.3.2/src/selectable/labeled_drilldown.rs,42,"pub fn sortby(mut self, targets: Vec<String>) -> LabeledDrilldown {",
ruroonga_command/0.3.2/src/logical_select.rs,105,"pub fn sortby(mut self, targets: Vec<String>) -> LogicalSelectCommand {",
ruroonga_command/0.3.3/src/selectable/drilldown.rs,32,"pub fn sortby(mut self, targets: Vec<String>) -> Drilldown {",
ruroonga_command/0.3.3/src/selectable/labeled_drilldown.rs,42,"pub fn sortby(mut self, targets: Vec<String>) -> LabeledDrilldown {",
ruroonga_command/0.3.3/src/select.rs,71,"pub fn sortby(mut self, targets: Vec<String>) -> SelectCommand {",
ruroonga_command/0.3.3/src/logical_select.rs,105,"pub fn sortby(mut self, targets: Vec<String>) -> LogicalSelectCommand {",
rust-libcore/0.0.3/rust/src/test/run-pass/deprecation-in-force-unstable.rs,14,fn main() { },
rust-libcore/0.0.3/rust/src/test/compile-fail/deprecation-in-staged-api.rs,18,fn main() { } //~ERROR `#[deprecated]` cannot be used in staged api,
rust-libcore/0.0.3/rust/src/test/compile-fail/deprecation-lint.rs,314,fn test_fn_closure_body() {,
rust-libcore/0.0.3/rust/src/test/compile-fail/deprecation-lint.rs,317,fn bar() { },
rust-libcore/0.0.3/rust/src/test/compile-fail/deprecation-lint.rs,318,bar(); //~ ERROR use of deprecated item 'this_crate::test_fn_closure_body::{{closure}}::bar',
rust-libcore/0.0.3/rust/src/test/compile-fail/deprecation-lint-nested.rs,15,fn issue_35128() {,
rust-libcore/0.0.3/rust/src/test/compile-fail/deprecation-lint-nested.rs,20,fn issue_35128_minimal() {,
rust-libcore/0.0.3/rust/src/test/compile-fail/deprecation-lint-nested.rs,57,fn deprecated_fn() {},
rust-libcore/0.0.1/rust/src/test/compile-fail/deprecation-lint-nested.rs,15,fn issue_35128() {,
rust-libcore/0.0.1/rust/src/test/compile-fail/deprecation-lint-nested.rs,20,fn issue_35128_minimal() {,
rust-libcore/0.0.1/rust/src/test/compile-fail/deprecation-lint-nested.rs,57,fn deprecated_fn() {},
rust-libcore/0.0.1/rust/src/test/compile-fail/deprecation-in-staged-api.rs,18,fn main() { } //~ERROR `#[deprecated]` cannot be used in staged api,
rust-libcore/0.0.1/rust/src/test/compile-fail/deprecation-lint.rs,314,fn test_fn_closure_body() {,
rust-libcore/0.0.1/rust/src/test/compile-fail/deprecation-lint.rs,317,fn bar() { },
rust-libcore/0.0.1/rust/src/test/compile-fail/deprecation-lint.rs,318,bar(); //~ ERROR use of deprecated item 'this_crate::test_fn_closure_body::{{closure}}::bar',
rust-libcore/0.0.1/rust/src/test/run-pass/deprecation-in-force-unstable.rs,14,fn main() { },
rust-libcore/0.0.2/rust/src/test/compile-fail/deprecation-in-staged-api.rs,18,fn main() { } //~ERROR `#[deprecated]` cannot be used in staged api,
rust-libcore/0.0.2/rust/src/test/compile-fail/deprecation-lint-nested.rs,15,fn issue_35128() {,
rust-libcore/0.0.2/rust/src/test/compile-fail/deprecation-lint-nested.rs,20,fn issue_35128_minimal() {,
rust-libcore/0.0.2/rust/src/test/compile-fail/deprecation-lint-nested.rs,57,fn deprecated_fn() {},
rust-libcore/0.0.2/rust/src/test/compile-fail/deprecation-lint.rs,314,fn test_fn_closure_body() {,
rust-libcore/0.0.2/rust/src/test/compile-fail/deprecation-lint.rs,317,fn bar() { },
rust-libcore/0.0.2/rust/src/test/compile-fail/deprecation-lint.rs,318,bar(); //~ ERROR use of deprecated item 'this_crate::test_fn_closure_body::{{closure}}::bar',
rust-libcore/0.0.2/rust/src/test/run-pass/deprecation-in-force-unstable.rs,14,fn main() { },
select/0.2.1/examples/stackoverflow.html,1614,fn old_way_of_doing_it() {,
select/0.2.2/examples/stackoverflow.html,1614,fn old_way_of_doing_it() {,
select/0.3.0/examples/stackoverflow.html,1614,fn old_way_of_doing_it() {,
select/0.4.0/examples/stackoverflow.html,1614,fn old_way_of_doing_it() {,
select/0.4.1/examples/stackoverflow.html,1614,fn old_way_of_doing_it() {,
select/0.4.2/examples/stackoverflow.html,1614,fn old_way_of_doing_it() {,
slog/1.6.0/src/lib.rs,669,"pub fn new(values: Box<ser::SyncMultiSerialize>, parent: OwnedKeyValueList) -> Self {",
slog/1.6.0/src/lib.rs,680,pub fn root(values: Option<Box<ser::SyncMultiSerialize>>) -> Self {,
slog/1.6.0/src/lib.rs,705,pub fn previous(&self) -> Option<OwnedKeyValueList> {,
slog/1.6.0/src/lib.rs,739,pub fn id(&self) -> usize {,
slog/1.7.0/src/lib.rs,669,"pub fn new(values: Box<ser::SyncMultiSerialize>, parent: OwnedKeyValueList) -> Self {",
slog/1.7.0/src/lib.rs,680,pub fn root(values: Option<Box<ser::SyncMultiSerialize>>) -> Self {,
slog/1.7.0/src/lib.rs,705,pub fn previous(&self) -> Option<OwnedKeyValueList> {,
slog/1.7.0/src/lib.rs,739,pub fn id(&self) -> usize {,
slog/1.7.1/src/lib.rs,666,"pub fn new(values: Box<ser::SyncMultiSerialize>, parent: OwnedKeyValueList) -> Self {",
slog/1.7.1/src/lib.rs,677,pub fn root(values: Option<Box<ser::SyncMultiSerialize>>) -> Self {,
slog/1.7.1/src/lib.rs,702,pub fn previous(&self) -> Option<OwnedKeyValueList> {,
slog/1.7.1/src/lib.rs,736,pub fn id(&self) -> usize {,
svgparser/0.6.1/1.patch,2340,-    pub fn slice_frame(&self) -> TextFrame<'a> {,
svgparser/0.6.0/1.patch,2340,-    pub fn slice_frame(&self) -> TextFrame<'a> {,
svgparser/0.6.2/1.patch,2340,-    pub fn slice_frame(&self) -> TextFrame<'a> {,
svgparser/0.6.3/1.patch,2340,-    pub fn slice_frame(&self) -> TextFrame<'a> {,
threadpool/1.3.0/src/lib.rs,255,"pub fn set_threads(&mut self, num_threads: usize) {",
threadpool/1.3.1/lib.rs,294,"pub fn set_threads(&mut self, num_threads: usize) {",
threadpool/1.4.1/lib.rs,219,"pub fn new_with_name(name: String, num_threads: usize) -> ThreadPool {",
threadpool/1.5.0/lib.rs,221,"pub fn new_with_name(name: String, num_threads: usize) -> ThreadPool {",
triple_buffer/1.1.0/src/lib.rs,80,//! # fn test_impl() {,
triple_buffer/1.1.1/src/lib.rs,80,//! # fn test_impl() {,
triple_buffer/2.0.0/src/lib.rs,80,//! # fn test_impl() {,
trust-dns/0.13.0/src/rr/dnssec/key_format.rs,207,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.10.5/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.10.4/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.10.2/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.10.3/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.12.0/src/rr/resource.rs,139,"pub fn add_name(&mut self, label: String) -> &mut Self {",
trust-dns/0.12.0/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.12.0/src/rr/domain.rs,109,"pub fn label(mut self, label: &'static str) -> Self {",
trust-dns/0.12.0/src/rr/domain.rs,164,pub fn with_labels(labels: Vec<String>) -> Self {,
trust-dns/0.12.0/src/rr/domain.rs,174,"pub fn prepend_label(&self, label: Rc<String>) -> Self {",
trust-dns/0.12.0/src/rr/domain.rs,193,"pub fn add_label(&mut self, label: Rc<String>) -> &mut Self {",
trust-dns/0.12.0/src/rr/domain.rs,205,"pub fn append(&mut self, other: &Self) -> &mut Self {",
trust-dns/0.11.2/src/rr/domain.rs,109,"pub fn label(mut self, label: &'static str) -> Self {",
trust-dns/0.11.2/src/rr/domain.rs,164,pub fn with_labels(labels: Vec<String>) -> Self {,
trust-dns/0.11.2/src/rr/domain.rs,174,"pub fn prepend_label(&self, label: Rc<String>) -> Self {",
trust-dns/0.11.2/src/rr/domain.rs,193,"pub fn add_label(&mut self, label: Rc<String>) -> &mut Self {",
trust-dns/0.11.2/src/rr/domain.rs,205,"pub fn append(&mut self, other: &Self) -> &mut Self {",
trust-dns/0.11.2/src/rr/resource.rs,139,"pub fn add_name(&mut self, label: String) -> &mut Self {",
trust-dns/0.11.2/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.11.0/src/rr/domain.rs,109,"pub fn label(mut self, label: &'static str) -> Self {",
trust-dns/0.11.0/src/rr/domain.rs,164,pub fn with_labels(labels: Vec<String>) -> Self {,
trust-dns/0.11.0/src/rr/domain.rs,174,"pub fn prepend_label(&self, label: Rc<String>) -> Self {",
trust-dns/0.11.0/src/rr/domain.rs,193,"pub fn add_label(&mut self, label: Rc<String>) -> &mut Self {",
trust-dns/0.11.0/src/rr/domain.rs,205,"pub fn append(&mut self, other: &Self) -> &mut Self {",
trust-dns/0.11.0/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.11.0/src/rr/resource.rs,139,"pub fn add_name(&mut self, label: String) -> &mut Self {",
trust-dns/0.11.1/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
trust-dns/0.11.1/src/rr/domain.rs,109,"pub fn label(mut self, label: &'static str) -> Self {",
trust-dns/0.11.1/src/rr/domain.rs,164,pub fn with_labels(labels: Vec<String>) -> Self {,
trust-dns/0.11.1/src/rr/domain.rs,174,"pub fn prepend_label(&self, label: Rc<String>) -> Self {",
trust-dns/0.11.1/src/rr/domain.rs,193,"pub fn add_label(&mut self, label: Rc<String>) -> &mut Self {",
trust-dns/0.11.1/src/rr/domain.rs,205,"pub fn append(&mut self, other: &Self) -> &mut Self {",
trust-dns/0.11.1/src/rr/resource.rs,139,"pub fn add_name(&mut self, label: String) -> &mut Self {",
trust-dns/0.11.3/src/rr/resource.rs,139,"pub fn add_name(&mut self, label: String) -> &mut Self {",
trust-dns/0.11.3/src/rr/domain.rs,109,"pub fn label(mut self, label: &'static str) -> Self {",
trust-dns/0.11.3/src/rr/domain.rs,164,pub fn with_labels(labels: Vec<String>) -> Self {,
trust-dns/0.11.3/src/rr/domain.rs,174,"pub fn prepend_label(&self, label: Rc<String>) -> Self {",
trust-dns/0.11.3/src/rr/domain.rs,193,"pub fn add_label(&mut self, label: Rc<String>) -> &mut Self {",
trust-dns/0.11.3/src/rr/domain.rs,205,"pub fn append(&mut self, other: &Self) -> &mut Self {",
trust-dns/0.11.3/src/rr/dnssec/key_format.rs,194,"pub fn encode_key(self, key_pair: &KeyPair, password: Option<&str>) -> DnsSecResult<Vec<u8>> {",
vulkano/0.4.4/src/buffer/cpu_access.rs,81,"pub fn new<'a, I>(device: Arc<Device>, usage: BufferUsage, queue_families: I)",
vulkano/0.4.4/src/buffer/cpu_access.rs,158,"pub fn array<'a, I>(device: Arc<Device>, len: usize, usage: BufferUsage, queue_families: I)",
vulkano/0.5.0/src/buffer/cpu_access.rs,94,"pub fn new<'a, I>(device: Arc<Device>, usage: BufferUsage, queue_families: I)",
vulkano/0.5.0/src/buffer/cpu_access.rs,169,"pub fn array<'a, I>(device: Arc<Device>, len: usize, usage: BufferUsage, queue_families: I)",
vulkano/0.5.1/src/buffer/cpu_access.rs,94,"pub fn new<'a, I>(device: Arc<Device>, usage: BufferUsage, queue_families: I)",
vulkano/0.5.1/src/buffer/cpu_access.rs,169,"pub fn array<'a, I>(device: Arc<Device>, len: usize, usage: BufferUsage, queue_families: I)",
vulkano/0.5.3/src/buffer/cpu_access.rs,93,"pub fn new<'a, I>(device: Arc<Device>, usage: BufferUsage, queue_families: I)",
vulkano/0.5.3/src/buffer/cpu_access.rs,168,"pub fn array<'a, I>(device: Arc<Device>, len: usize, usage: BufferUsage, queue_families: I)",
vulkano/0.5.2/src/buffer/cpu_access.rs,94,"pub fn new<'a, I>(device: Arc<Device>, usage: BufferUsage, queue_families: I)",
vulkano/0.5.2/src/buffer/cpu_access.rs,169,"pub fn array<'a, I>(device: Arc<Device>, len: usize, usage: BufferUsage, queue_families: I)",
vulkano/0.5.4/src/buffer/cpu_access.rs,93,"pub fn new<'a, I>(device: Arc<Device>, usage: BufferUsage, queue_families: I)",
vulkano/0.5.4/src/buffer/cpu_access.rs,168,"pub fn array<'a, I>(device: Arc<Device>, len: usize, usage: BufferUsage, queue_families: I)",
vulkano/0.5.5/src/buffer/cpu_access.rs,93,"pub fn new<'a, I>(device: Arc<Device>, usage: BufferUsage, queue_families: I)",
vulkano/0.5.5/src/buffer/cpu_access.rs,168,"pub fn array<'a, I>(device: Arc<Device>, len: usize, usage: BufferUsage, queue_families: I)",
vulkano/0.5.6/src/buffer/cpu_access.rs,93,"pub fn new<'a, I>(device: Arc<Device>, usage: BufferUsage, queue_families: I)",
vulkano/0.5.6/src/buffer/cpu_access.rs,168,"pub fn array<'a, I>(device: Arc<Device>, len: usize, usage: BufferUsage, queue_families: I)",
winit/0.10.0/src/window.rs,215,"pub fn get_inner_size_points(&self) -> Option<(u32, u32)> {",
winit/0.10.0/src/window.rs,233,"pub fn get_inner_size_pixels(&self) -> Option<(u32, u32)> {",
winit/0.10.0/src/window.rs,263,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.10.0/src/window.rs,272,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.10.0/src/os/unix.rs,127,fn is_ready(&self) -> bool;,
winit/0.10.1/src/window.rs,215,"pub fn get_inner_size_points(&self) -> Option<(u32, u32)> {",
winit/0.10.1/src/window.rs,233,"pub fn get_inner_size_pixels(&self) -> Option<(u32, u32)> {",
winit/0.10.1/src/window.rs,263,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.10.1/src/window.rs,272,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.10.1/src/os/unix.rs,127,fn is_ready(&self) -> bool;,
winit/0.11.0/src/window.rs,215,"pub fn get_inner_size_points(&self) -> Option<(u32, u32)> {",
winit/0.11.0/src/window.rs,233,"pub fn get_inner_size_pixels(&self) -> Option<(u32, u32)> {",
winit/0.11.0/src/window.rs,263,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.11.0/src/window.rs,272,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.11.0/src/os/unix.rs,127,fn is_ready(&self) -> bool;,
winit/0.6.3/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.6.3/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.6.4/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.6.4/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.7.0/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.7.0/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.7.1/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.7.1/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.6.2/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.6.2/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.6.1/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.6.1/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.7.2/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.7.2/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.7.3/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.7.3/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.7.4/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.7.4/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.7.6/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.7.6/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.8.1/src/window.rs,260,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.8.1/src/window.rs,269,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.7.5/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.7.5/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.8.0/src/window.rs,260,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.8.0/src/window.rs,269,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.6.0/src/window.rs,254,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.6.0/src/window.rs,263,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.8.2/src/window.rs,260,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.8.2/src/window.rs,269,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.8.3/src/window.rs,260,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.8.3/src/window.rs,269,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
winit/0.9.0/src/os/unix.rs,129,fn is_ready(&self) -> bool;,
winit/0.9.0/src/window.rs,215,"pub fn get_inner_size_points(&self) -> Option<(u32, u32)> {",
winit/0.9.0/src/window.rs,233,"pub fn get_inner_size_pixels(&self) -> Option<(u32, u32)> {",
winit/0.9.0/src/window.rs,263,pub unsafe fn platform_display(&self) -> *mut libc::c_void {,
winit/0.9.0/src/window.rs,272,pub unsafe fn platform_window(&self) -> *mut libc::c_void {,
